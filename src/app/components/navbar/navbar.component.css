.global {
    display: flex;
    justify-content: flex-start;
    padding: 60px 75px;
}

.alignment-links {
    display: flex;
    padding: 6rem 0 2rem;
}

.alignment-btns {
    display: flex;
    justify-content: space-around;
    flex-direction: column;
    min-height: 8.2rem;
}

.btn-large {
    border: none;
    height: 55px;
    border-radius: 0px;
}

.btn-discount {
    background: #fbb710;
    color: #fff;
    font-weight: 400;
    font-size: 1.2rem;
}

.btn-discount:hover {
    background: #131212;
    transition: all 500ms;
}


.btn-new:hover {
    background: #afafaf;
    color: #131212;
    transition: all 500ms;
}

.btn-new {
    background: #131212;
    color: #fff;
    font-weight: 400;
    font-size: 1.2rem;
}

.menu-below {
    display: flex;
    padding-top: 2rem;
    flex-direction: column;
}

.menu-below-inside {
    display: flex;
    align-items: center;
    font-weight: 500;
    padding-top: 1rem;
    font-size: 1.3rem;
    text-transform: uppercase;
}

.material-icons {
    padding-right: 7px;
    cursor: pointer;

}

.btn-below {
    cursor: pointer;
}

.btn-below:hover {
    color: #fbb710;
    transition: all 500ms;
}

.example-container {
    display: flex;
    flex-direction: column;
    position: relative;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  
  .example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
  }
  
  h1.example-app-name {
    margin-left: 8px;
  }
  
  .example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
  }
  
  .example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  }